import React, { useState } from 'react';
import {
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Typography,
  Paper,
  Box,
  Button,
  Checkbox,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField, // –î–æ–±–∞–≤–ª—è–µ–º TextField –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
} from '@mui/material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import CandidateAdditionalInfo from './CandidateAdditionalInfo';
import ManagerComments from './ManagerComments';

const CandidatesReadySoon = ({ filteredPeople, incassatorsData, employeeScores, showVideoPresentations }) => {
  const [expanded, setExpanded] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
  const [selectedCandidates, setSelectedCandidates] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  const [videoPresentations, setVideoPresentations] = useState({}); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
  const [openConfirmation, setOpenConfirmation] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const [openMessageConfirmation, setOpenMessageConfirmation] = useState(false); // –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  const [messageText, setMessageText] = useState(''); // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
  const handleChange = (panel) => (event, isExpanded) => {
    setExpanded(isExpanded ? panel : null);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω–∫–∞—Å—Å–∞—Ç–æ—Ä–µ –ø–æ –∏–º–µ–Ω–∏
  const findIncassatorInfo = (fullName) => {
    if (!Array.isArray(incassatorsData)) {
      console.error('incassatorsData –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
      return null;
    }

    return incassatorsData.find(
      (incassator) =>
        incassator.full_name.toLowerCase() === fullName.toLowerCase()
    );
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
  const requestVideoPresentation = async (userId) => {
    console.log(`üü¢ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${userId}`);

    try {
      const response = await fetch('http://195.133.38.138:5005/api/send-video-request', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ userId }),
      });

      if (response.ok) {
        setVideoPresentations((prev) => ({
          ...prev,
          [userId]: { status: "–û–∂–∏–¥–∞–Ω–∏–µ", url: null },
        }));

        startCheckingVideoLink(userId);
      } else {
        console.error(`üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${userId}`);
      }
    } catch (error) {
      console.error(`üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${userId}:`, error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
  const startCheckingVideoLink = (userId) => {
    const intervalId = setInterval(async () => {
      try {
        const response = await fetch(`http://195.133.38.138:5005/api/get-video-link?userId=${userId}`);
        const data = await response.json();

        if (data.status === "–ó–∞–≥—Ä—É–∂–µ–Ω–æ") {
          setVideoPresentations((prev) => ({
            ...prev,
            [userId]: { status: "–ó–∞–≥—Ä—É–∂–µ–Ω–æ", url: data.videoUrl },
          }));
          clearInterval(intervalId);
        } else if (data.status === "–û–∂–∏–¥–∞–Ω–∏–µ") {
          console.log("üü° –í–∏–¥–µ–æ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É...");
        } else {
          console.error(`–û—à–∏–±–∫–∞: ${data.error}`);
          clearInterval(intervalId);
        }
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ: ${error}`);
        clearInterval(intervalId);
      }
    }, 5000);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  const handleCheckboxChange = (userId) => {
    setSelectedCandidates((prev) =>
      prev.includes(userId)
        ? prev.filter((id) => id !== userId)
        : [...prev, userId]
    );
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
  const handleSendVideoRequests = () => {
    setOpenConfirmation(true); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
  const handleConfirmSend = () => {
    selectedCandidates.forEach(requestVideoPresentation); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å—ã
    setSelectedCandidates([]); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —á–µ–∫–±–æ–∫—Å—ã
    setOpenConfirmation(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
  const handleCancelSend = () => {
    setOpenConfirmation(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const handleSendMessage = () => {
    setOpenMessageConfirmation(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const handleConfirmMessageSend = () => {
    selectedCandidates.forEach((userId) => sendMessageToUser(userId, messageText));
    setSelectedCandidates([]);
    setMessageText('');
    setOpenMessageConfirmation(false);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const handleCancelMessageSend = () => {
    setOpenMessageConfirmation(false);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram
  const sendMessageToUser = async (candidateId, message) => {
    try {
        const response = await fetch('http://195.133.38.138:5005/api/send-message', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ candidateId, message }),
        });

        if (response.ok) {
            console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID: ${candidateId}`);
        } else {
            console.error(`üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID: ${candidateId}`);
        }
    } catch (error) {
        console.error(`üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID: ${candidateId}:`, error);
    }
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
  const filteredCandidates = showVideoPresentations
    ? filteredPeople.filter((person) => videoPresentations[person.user_id]?.status !== "–ó–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    : filteredPeople;

  return (
    <Paper
      sx={{
        p: 2,
        flex: 1,
        overflowY: 'auto',
        '::-webkit-scrollbar': { width: '6px' },
        '::-webkit-scrollbar-thumb': {
          backgroundColor: '#aaa',
          borderRadius: '3px',
        },
        borderRadius: '8px',
        boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',
        backgroundColor: '#fff',
      }}
    >
      <Typography variant="h6" sx={{ mb: 2, textAlign: 'center', color: '#333' }}>
        üîú Ready Soon
      </Typography>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è */}
      <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>
        <Button
          variant="contained"
          color="secondary"
          disabled={selectedCandidates.length === 0}
          onClick={handleSendVideoRequests}
        >
          üé• –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
        </Button>
        <Button
          variant="contained"
          color="primary"
          disabled={selectedCandidates.length === 0}
          onClick={handleSendMessage}
        >
          üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        </Button>
      </Box>

      {/* –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */}
      {selectedCandidates.length > 0 && (
        <Box sx={{ mb: 2 }}>
          <TextField
            fullWidth
            multiline
            rows={4}
            variant="outlined"
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            value={messageText}
            onChange={(e) => setMessageText(e.target.value)}
          />
        </Box>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ */}
      <Dialog open={openConfirmation} onClose={handleCancelSend}>
        <DialogTitle>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</DialogTitle>
        <DialogContent>
          <Typography>
            –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤?
          </Typography>
        </DialogContent>
        <DialogActions>
          <Button onClick={handleCancelSend} color="primary">
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleConfirmSend} color="secondary" variant="contained">
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
          </Button>
        </DialogActions>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è */}
      <Dialog open={openMessageConfirmation} onClose={handleCancelMessageSend}>
        <DialogTitle>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</DialogTitle>
        <DialogContent>
          <Typography>
            –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º?
          </Typography>
        </DialogContent>
        <DialogActions>
          <Button onClick={handleCancelMessageSend} color="primary">
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleConfirmMessageSend} color="primary" variant="contained">
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
          </Button>
        </DialogActions>
      </Dialog>

      {filteredCandidates.map((person, idx) => {
        const incassatorInfo = findIncassatorInfo(person.full_name);
        const videoStatus = videoPresentations[person.user_id]?.status || "–ó–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω";
        const videoUrl = videoPresentations[person.user_id]?.url;

        return (
          <Accordion
            key={`person-${idx}`}
            sx={{ mb: 2 }}
            expanded={expanded === `panel-${idx}`}
            onChange={handleChange(`panel-${idx}`)}
          >
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>
                <Checkbox
                  checked={selectedCandidates.includes(person.user_id)}
                  onChange={() => handleCheckboxChange(person.user_id)}
                  onClick={(e) => e.stopPropagation()} // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —á–µ–∫–±–æ–∫—Å
                />
                {person.photo_url ? (
                  <img
                    src={person.photo_url}
                    alt={person.full_name}
                    onError={(e) => { e.target.style.display = 'none'; }}
                    style={{
                      width: '60px',
                      height: '60px',
                      borderRadius: '50%',
                      objectFit: 'cover',
                      marginRight: '15px',
                      boxShadow: '0 2px 4px rgba(0,0,0,0.2)',
                    }}
                  />
                ) : (
                  <Box
                    sx={{
                      width: '60px',
                      height: '60px',
                      borderRadius: '50%',
                      backgroundColor: '#ccc',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      marginRight: '15px',
                      boxShadow: '0 2px 4px rgba(0,0,0,0.2)',
                    }}
                  >
                    <Typography variant="body2">?</Typography>
                  </Box>
                )}
                <Typography variant="h6">{person.full_name}</Typography>
                <Box sx={{ flexGrow: 1 }} /> {/* –≠—Ç–æ—Ç Box –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ */}
                {videoStatus !== "–ó–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω" && (
                  <Box sx={{ display: 'flex', alignItems: 'center', ml: 2 }}>
                    {videoStatus === "–û–∂–∏–¥–∞–Ω–∏–µ" && (
                      <>
                        <Typography variant="body2" sx={{ mr: 1 }}>üìπ</Typography>
                        <Typography variant="body2">‚åõ</Typography>
                      </>
                    )}
                    {videoStatus === "–ó–∞–≥—Ä—É–∂–µ–Ω–æ" && (
                      <>
                        <Typography variant="body2" sx={{ mr: 1 }}>üìπ</Typography>
                        <Typography variant="body2">‚úÖ</Typography>
                      </>
                    )}
                  </Box>
                )}
              </Box>
            </AccordionSummary>
            <AccordionDetails>
              {person.answers && person.answers.length > 0 && (
                <Paper
                  sx={{
                    p: 2,
                    mt: 1,
                    backgroundColor: '#ffffff',
                    borderRadius: '8px',
                    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.1)',
                  }}
                >
                  {person.answers.map((ans, i) => (
                    <Box key={`answer-${i}`} sx={{ mb: 1 }}>
                      <Typography variant="body1">
                        <b>{ans.question_text}:</b> {ans.answer_text}
                      </Typography>
                    </Box>
                  ))}

                  {/* –í—Å—Ç–∞–≤–ª—è–µ–º CandidateAdditionalInfo –ø–µ—Ä–µ–¥ –±–ª–æ–∫–æ–º —Å –≤–∏–¥–µ–æ */}
                  <CandidateAdditionalInfo
                    incassatorInfo={incassatorInfo}
                    candidateScores={employeeScores.find(score => score.fio === person.full_name)}
                  />

                  {/* –ë–ª–æ–∫ —Å –≤–∏–¥–µ–æ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ */}
                  {videoStatus === '–ó–∞–≥—Ä—É–∂–µ–Ω–æ' && videoUrl && (
                    <Box sx={{ mt: 2 }}>
                      <Typography variant="h6" sx={{ mb: 1 }}>
                        –í–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è
                      </Typography>
                      <video controls width="100%" style={{ borderRadius: '8px' }}>
                        <source src={videoUrl} type="video/mp4" />
                        –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ.
                      </video>
                    </Box>
                  )}
                  {/* –ë–ª–æ–∫ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è */}
                  <ManagerComments userId={person.user_id} initialComment={person.managerComment} />
                </Paper>
              )}
            </AccordionDetails>
          </Accordion>
        );
      })}
    </Paper>
  );
};

export default CandidatesReadySoon;