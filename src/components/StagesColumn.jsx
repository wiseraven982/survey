import React, { useState } from 'react';
import { Paper, Typography, Box, Button } from '@mui/material';

const StagesColumn = ({
  onAllCandidatesClick,
  onReadyNowClick,
  onReadySoonClick,
  onReadyFutureClick,
  onVideoPresentationClick,
  onChatClick, // –ü—Ä–æ–ø—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ß–∞—Ç —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏"
  candidateCount,
}) => {
  const [activeButton, setActiveButton] = useState("all");

  const handleButtonClick = (buttonName, callback) => {
    setActiveButton(buttonName);
    if (callback) callback();
  };

  return (
    <Paper
      sx={{
        p: 2,
        flex: 1,
        overflowY: 'auto',
        borderRadius: '8px',
        boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',
        backgroundColor: '#fff',
      }}
    >
      <Typography variant="h6" sx={{ mb: 2, textAlign: 'center', color: '#333' }}>
        üîé Talent Pipeline
      </Typography>

      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
        <Button
          variant="contained"
          fullWidth
          startIcon={<span>üìÑ</span>}
          onClick={() => handleButtonClick("all", onAllCandidatesClick)}
          sx={{
            border: activeButton === "all" ? "2px solid black" : "none",
            backgroundColor: activeButton === "all" ? "#d3d3d3" : "primary.main",
            color: activeButton === "all" ? "black" : "white",
          }}
        >
          –í—Å–µ –∞–Ω–∫–µ—Ç—ã
        </Button>
        <Button
          variant="contained"
          fullWidth
          startIcon={<span>üî•</span>}
          onClick={() => handleButtonClick("readyNow", onReadyNowClick)}
          sx={{
            border: activeButton === "readyNow" ? "2px solid black" : "none",
            backgroundColor: activeButton === "readyNow" ? "#d3d3d3" : "primary.main",
            color: activeButton === "readyNow" ? "black" : "white",
          }}
        >
          Ready Now
        </Button>
        <Button
          variant="contained"
          fullWidth
          startIcon={<span>‚è≥</span>}
          onClick={() => handleButtonClick("readySoon", onReadySoonClick)}
          sx={{
            border: activeButton === "readySoon" ? "2px solid black" : "none",
            backgroundColor: activeButton === "readySoon" ? "#d3d3d3" : "primary.main",
            color: activeButton === "readySoon" ? "black" : "white",
          }}
        >
          Ready Soon
        </Button>
        <Button
          variant="contained" // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —É–±—Ä–∞–Ω–∞ –ª–∏—à–Ω—è—è –±—É–∫–≤–∞ "d"
          fullWidth
          startIcon={<span>üå±</span>}
          onClick={() => handleButtonClick("readyFuture", onReadyFutureClick)}
          sx={{
            border: activeButton === "readyFuture" ? "2px solid black" : "none",
            backgroundColor: activeButton === "readyFuture" ? "#d3d3d3" : "primary.main",
            color: activeButton === "readyFuture" ? "black" : "white",
          }}
        >
          Ready in the Future
        </Button>
        <Button
          variant="contained"
          fullWidth
          startIcon={<span>üé•</span>}
          onClick={() => handleButtonClick("video", onVideoPresentationClick)}
          sx={{
            border: activeButton === "video" ? "2px solid black" : "none",
            backgroundColor: activeButton === "video" ? "#d3d3d3" : "primary.main",
            color: activeButton === "video" ? "black" : "white",
          }}
        >
          –í–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        </Button>
        <Button
          variant="contained"
          fullWidth
          startIcon={<span>‚úâÔ∏è</span>}
          onClick={() => handleButtonClick("message", onChatClick)} // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ß–∞—Ç —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏"
          sx={{
            border: activeButton === "message" ? "2px solid black" : "none",
            backgroundColor: activeButton === "message" ? "#d3d3d3" : "primary.main",
            color: activeButton === "message" ? "black" : "white",
          }}
        >
          –ß–∞—Ç —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏
        </Button>
      </Box>

      {/* –°—á–µ—Ç—á–∏–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ */}
      <Box sx={{ mt: 3, textAlign: 'center' }}>
        <Typography variant="body1" sx={{ color: '#666' }}>
          –í—Å–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤: {candidateCount}
        </Typography>
      </Box>
    </Paper>
  );
};

export default StagesColumn;